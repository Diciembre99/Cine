/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package CineApp;

import javax.swing.*;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle;
import com.toedter.calendar.*;
import static CineApp.EscribirSecuencial.*;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.time.Instant;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.util.ArrayList;
import java.util.Date;
import java.util.LinkedList;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Jose Vicente Vargas Mestanza <jvsonic9@gmail.com>
 */
public class PaginaModificacionBildboard extends javax.swing.JFrame {

    private LinkedList<Billboard> billboard;
    private ArrayList<String> nombres = new ArrayList();

    /**
     * Creates new form Prueba2
     *
     * @param fuctions
     */
    public PaginaModificacionBildboard(LinkedList<Billboard> billboard) {
        this.billboard = billboard;
        Dimension pantalla = Toolkit.getDefaultToolkit().getScreenSize();
        int height = pantalla.height;
        ZoneId defaultZoneId = ZoneId.systemDefault();
        int width = pantalla.width;
        setSize(width / 2, height / 2);
        setLocationRelativeTo(null);

        for (Billboard b : billboard) {
            nombres.add(b.getPelicula());
        }
        initComponents();
        jlErrorDatos.setVisible(false);
        jlFunciono.setVisible(false);
        jtfTitulo.setText(this.billboard.get(jcPeliculas.getSelectedIndex()).getPelicula());
        jdFInicio.setDate(Date.from(this.billboard.get(jcPeliculas.getSelectedIndex()).getInicio().atStartOfDay(defaultZoneId).toInstant()));
        jdFFin.setDate(Date.from(this.billboard.get(jcPeliculas.getSelectedIndex()).getFinalizacion().atStartOfDay(defaultZoneId).toInstant()));
        jcGenero.setSelectedItem(this.billboard.get(jcPeliculas.getSelectedIndex()).getGenero());
        jcEdad.setSelectedItem(this.billboard.get(jcPeliculas.getSelectedIndex()).getPegi());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    // Generated using JFormDesigner Evaluation license - unknown
    private void initComponents() {
        jPanel1 = new JPanel();
        jcGenero = new JComboBox<>();
        jLabel1 = new JLabel();
        jLabel2 = new JLabel();
        jLabel3 = new JLabel();
        jLabel4 = new JLabel();
        jLabel5 = new JLabel();
        jtfTitulo = new JTextField();
        jLabel6 = new JLabel();
        jcEdad = new JComboBox<>();
        btnVolver = new JButton();
        btnGuardar = new JButton();
        jLabel7 = new JLabel();
        jcPeliculas = new JComboBox<>();
        jcModificar = new JCheckBox();
        jlErrorDatos = new JLabel();
        btnEliminar = new JButton();
        jcbEliminar = new JCheckBox();
        jlFunciono = new JLabel();
        jdFInicio = new JDateChooser();
        jdFFin = new JDateChooser();

        //======== this ========
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        var contentPane = getContentPane();

        //======== jPanel1 ========
        {
            jPanel1.setToolTipText("");
            jPanel1.setBorder ( new javax . swing. border .CompoundBorder ( new javax . swing. border .TitledBorder ( new javax .
            swing. border .EmptyBorder ( 0, 0 ,0 , 0) ,  "JF\u006frmD\u0065sig\u006eer \u0045val\u0075ati\u006fn" , javax. swing .border
            . TitledBorder. CENTER ,javax . swing. border .TitledBorder . BOTTOM, new java. awt .Font ( "Dia\u006cog"
            , java .awt . Font. BOLD ,12 ) ,java . awt. Color .red ) ,jPanel1. getBorder
            () ) ); jPanel1. addPropertyChangeListener( new java. beans .PropertyChangeListener ( ){ @Override public void propertyChange (java
            . beans. PropertyChangeEvent e) { if( "\u0062ord\u0065r" .equals ( e. getPropertyName () ) )throw new RuntimeException
            ( ) ;} } );

            //---- jcGenero ----
            jcGenero.setModel(new DefaultComboBoxModel(Gender.values()));
            jcGenero.setEnabled(false);

            //---- jLabel1 ----
            jLabel1.setText("Genero");

            //---- jLabel2 ----
            jLabel2.setText("Visualizacion/Modifica de Cartelera");

            //---- jLabel3 ----
            jLabel3.setText("Fecha Fin");

            //---- jLabel4 ----
            jLabel4.setText("Fecha inicio");

            //---- jLabel5 ----
            jLabel5.setText("Titulo");

            //---- jtfTitulo ----
            jtfTitulo.setEnabled(false);

            //---- jLabel6 ----
            jLabel6.setText("Restriccion edad");

            //---- jcEdad ----
            jcEdad.setModel(new DefaultComboBoxModel(AgeCategory.values()));
            jcEdad.setEnabled(false);

            //---- btnVolver ----
            btnVolver.setText("Volver");
            btnVolver.addActionListener(e -> btnVolverActionPerformed(e));

            //---- btnGuardar ----
            btnGuardar.setText("Modificar");
            btnGuardar.setEnabled(false);
            btnGuardar.addActionListener(e -> btnGuardarActionPerformed(e));

            //---- jLabel7 ----
            jLabel7.setText("Selecciona pelicula");

            //---- jcPeliculas ----
            jcPeliculas.setModel(new DefaultComboBoxModel(nombres.toArray()));
            jcPeliculas.addActionListener(e -> jcPeliculasActionPerformed(e));

            //---- jcModificar ----
            jcModificar.setText("Modificar ?");
            jcModificar.addActionListener(e -> modificar(e));

            //---- jlErrorDatos ----
            jlErrorDatos.setText("Faltan datos por introducir");

            //---- btnEliminar ----
            btnEliminar.setText("Eliminar");
            btnEliminar.setEnabled(false);
            btnEliminar.addActionListener(e -> btnEliminarActionPerformed(e));

            //---- jcbEliminar ----
            jcbEliminar.setText("Eliminar ?");
            jcbEliminar.addActionListener(e -> jcbEliminarActionPerformed(e));

            //---- jlFunciono ----
            jlFunciono.setText("jLabel8");

            //---- jdFInicio ----
            jdFInicio.setEnabled(false);

            //---- jdFFin ----
            jdFFin.setEnabled(false);

            GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
            jPanel1.setLayout(jPanel1Layout);
            jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup()
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup()
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(btnVolver)
                                .addGap(53, 53, 53)
                                .addComponent(btnEliminar)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnGuardar))
                            .addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup()
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jcPeliculas, GroupLayout.PREFERRED_SIZE, 140, GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel2, GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup()
                                    .addComponent(jcModificar)
                                    .addComponent(jcbEliminar)))
                            .addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6, GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                                    .addComponent(jLabel1, GroupLayout.PREFERRED_SIZE, 68, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4, GroupLayout.PREFERRED_SIZE, 68, GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jPanel1Layout.createParallelGroup()
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(38, 38, 38)
                                        .addComponent(jlErrorDatos, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup()
                                            .addComponent(jcEdad, GroupLayout.Alignment.TRAILING)
                                            .addComponent(jtfTitulo)
                                            .addComponent(jcGenero)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup()
                                            .addComponent(jdFFin, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jdFInicio, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                        .addGap(20, 20, 20))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jlFunciono, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
            );
            jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup()
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jcbEliminar))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jcPeliculas, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcModificar))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlFunciono)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup()
                            .addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(17, 17, 17)
                                .addComponent(jLabel4)
                                .addGap(14, 14, 14)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1)
                                .addGap(34, 34, 34))
                            .addComponent(jLabel6, GroupLayout.Alignment.TRAILING)
                            .addGroup(GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jtfTitulo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30))
                                    .addComponent(jdFInicio, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addComponent(jdFFin, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jcGenero, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jcEdad, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jlErrorDatos)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                            .addComponent(btnVolver)
                            .addComponent(btnGuardar)
                            .addComponent(btnEliminar))
                        .addGap(14, 14, 14))
            );
        }

        GroupLayout contentPaneLayout = new GroupLayout(contentPane);
        contentPane.setLayout(contentPaneLayout);
        contentPaneLayout.setHorizontalGroup(
            contentPaneLayout.createParallelGroup()
                .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        contentPaneLayout.setVerticalGroup(
            contentPaneLayout.createParallelGroup()
                .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pack();
        setLocationRelativeTo(getOwner());
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        escribirSecuencialLista(this.billboard);
        this.setVisible(false);
        new PaginaPrincipal(this.billboard).setVisible(true);
    }//GEN-LAST:event_btnVolverActionPerformed

    private void jcPeliculasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcPeliculasActionPerformed
        seleccionado();
    }//GEN-LAST:event_jcPeliculasActionPerformed

    private void modificar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificar
        boolean seleccionado = jcModificar.isSelected();

        jdFFin.setEnabled(seleccionado);
        jdFInicio.setEnabled(seleccionado);
        jcEdad.setEnabled(seleccionado);
        jtfTitulo.setEnabled(seleccionado);
        jcGenero.setEnabled(seleccionado);
        btnGuardar.setEnabled(seleccionado);
    }//GEN-LAST:event_modificar

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        String titulo = jtfTitulo.getText(), error = "";
        Instant instant, instant2;
        ZonedDateTime zdt, zdt2;
        LocalDate date, date2;
        Gender genero = (Gender) jcGenero.getSelectedItem();
        AgeCategory edad = (AgeCategory) jcEdad.getSelectedItem();
        LocalDate fIni = null, fFin = null;

        boolean validacion = true;
        jlErrorDatos.setVisible(false);
        if (titulo.isBlank()) {
            validacion = false;
            error = "El titulo no puede estar vacio.\n";
        }

        try {
            instant = jdFInicio.getDate().toInstant();
            zdt = instant.atZone(ZoneId.systemDefault());
            date = zdt.toLocalDate();
            fIni = date;
            instant2 = jdFFin.getDate().toInstant();
            zdt2 = instant2.atZone(ZoneId.systemDefault());
            date2 = zdt2.toLocalDate();
            fFin = date2;
            if (jdFInicio.getDate().after(jdFFin.getDate())) {
                validacion = false;
                error += "No puede ser menor la fecha de fin que la inicias.\n";
            }
        } catch (NullPointerException npe) {
            validacion = false;
            error += "No pueden estar vacias las fechas.\n";
        }

        if (validacion) {
            this.billboard.set(jcPeliculas.getSelectedIndex(), new Billboard(titulo, fIni, fFin, genero, edad));
            jlFunciono.setText("Se ha modificado correctamente la cartelera: " + titulo);
            jlFunciono.setVisible(true);
        } else {
            jlErrorDatos.setText(error);
            jlErrorDatos.setVisible(true);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        this.billboard.remove(jcPeliculas.getSelectedIndex());
        if (!this.billboard.isEmpty()) {
            jlFunciono.setText("Se ha eliminado la cartelera: " + this.nombres.get(jcPeliculas.getSelectedIndex()));
            jlFunciono.setVisible(true);

            this.nombres.remove(jcPeliculas.getSelectedIndex());
            jcPeliculas.setModel(new DefaultComboBoxModel(nombres.toArray()));

            seleccionado();
        } else {
            this.setVisible(false);
            new PaginaPrincipal(this.billboard).setVisible(true);
        }

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void jcbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbEliminarActionPerformed
        boolean seleccionado = jcbEliminar.isSelected();
        btnEliminar.setEnabled(seleccionado);
    }//GEN-LAST:event_jcbEliminarActionPerformed

    /**
     * @param args the command line arguments9
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(PaginaCreacionBildboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(PaginaCreacionBildboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(PaginaCreacionBildboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(PaginaCreacionBildboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new PaginaCreacionBildboard(this.bildboard).setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // Generated using JFormDesigner Evaluation license - unknown
    private JPanel jPanel1;
    private JComboBox<String> jcGenero;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel jLabel4;
    private JLabel jLabel5;
    private JTextField jtfTitulo;
    private JLabel jLabel6;
    private JComboBox<String> jcEdad;
    private JButton btnVolver;
    private JButton btnGuardar;
    private JLabel jLabel7;
    private JComboBox<String> jcPeliculas;
    private JCheckBox jcModificar;
    private JLabel jlErrorDatos;
    private JButton btnEliminar;
    private JCheckBox jcbEliminar;
    private JLabel jlFunciono;
    private JDateChooser jdFInicio;
    private JDateChooser jdFFin;
    // End of variables declaration//GEN-END:variables

    public void seleccionado() {
        ZoneId defaultZoneId = ZoneId.systemDefault();
        jtfTitulo.setText(this.billboard.get(jcPeliculas.getSelectedIndex()).getPelicula());
        jdFInicio.setDate(Date.from(this.billboard.get(jcPeliculas.getSelectedIndex()).getInicio().atStartOfDay(defaultZoneId).toInstant()));
        jdFFin.setDate(Date.from(this.billboard.get(jcPeliculas.getSelectedIndex()).getFinalizacion().atStartOfDay(defaultZoneId).toInstant()));
        jcGenero.setSelectedItem(this.billboard.get(jcPeliculas.getSelectedIndex()).getGenero());
        jcEdad.setSelectedItem(this.billboard.get(jcPeliculas.getSelectedIndex()).getPegi());
        jcModificar.setSelected(false);
        jcbEliminar.setSelected(false);
        btnEliminar.setEnabled(false);
        btnGuardar.setEnabled(false);
    }
}
